{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkeni\\\\Documents\\\\test2\\\\reactPokemonApp\\\\src\\\\components\\\\pokemon-form.tsx\";\nimport React, { useState } from 'react';\nimport formatType from '../helpers/format-type';\nimport { useHistory } from 'react-router-dom';\n\n// ToDo : comprendre comment l'objet pokemon est récupéré entierement ? -> recuperer dans pokemon-edit avec useState\nconst PokemonForm = ({\n  pokemon\n}) => {\n  const history = useHistory();\n  let pokemonInfo = {\n    name: {\n      value: pokemon.name,\n      isValid: true\n    },\n    hp: {\n      value: pokemon.hp,\n      isValid: true\n    },\n    cp: {\n      value: pokemon.cp,\n      isValid: true\n    },\n    types: {\n      value: pokemon.types,\n      isValid: true\n    }\n  }; // get pokemonInfo with useState type form FROM pokemon-detail \n\n  const [form, setForm] = useState(pokemonInfo);\n  const types = ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol', 'Combat', 'Psy'];\n\n  const hasType = type => {\n    return form.types.value.includes(type);\n  };\n\n  const handleInputChange = e => {\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    const newField = {\n      [fieldName]: {\n        value: fieldValue\n      }\n    };\n    setForm({ ...form,\n      ...newField\n    });\n  };\n\n  const selectType = (type, e) => {\n    const checked = e.target.checked;\n    let newField;\n    let newTypes = [];\n\n    if (checked) {\n      // Si l'utilisateur coche un nouveau type, on l'ajoute à la liste des types du pokemon \n      newTypes = form.types.value.concat([type]);\n    } else {\n      // Si l'utilisateur decoche un type, on le retire decla liste des types du pokemon. \n      newTypes = form.types.value.filter(currentTypes => currentTypes !== type);\n    }\n\n    newField = {\n      value: newTypes\n    }; // Comprendre\n\n    setForm({ ...form,\n      ...{\n        types: newField\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(form);\n    history.push(`/pokemons/${pokemon.id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: e => handleSubmit(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s12 m8 offset-m2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card hoverable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: pokemon.picture,\n    alt: pokemon.name,\n    style: {\n      width: '250px',\n      margin: '0 auto'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-stacked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"name\",\n    name: \"name\",\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: 'Nom du pokémon',\n    value: form.name.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"hp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, \"Point de vie\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"hp\",\n    name: \"hp\",\n    type: \"number\",\n    className: \"form-control\",\n    min: \"0\",\n    max: \"999\",\n    value: form.hp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"cp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"D\\xE9g\\xE2ts\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"cp\",\n    name: \"cp\",\n    type: \"number\",\n    className: \"form-control\",\n    min: \"0\",\n    max: \"999\",\n    value: form.cp.value,\n    onChange: e => handleInputChange(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, \"Types\"), types.map(type => /*#__PURE__*/React.createElement(\"div\", {\n    key: type,\n    style: {\n      marginBottom: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: type,\n    type: \"checkbox\",\n    className: \"filled-in\",\n    value: form.types.value.toString(),\n    checked: hasType(type),\n    onChange: e => selectType(type, e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: formatType(type),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, type))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-action center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, \"Valider\")))))));\n};\n\nexport default PokemonForm;","map":{"version":3,"sources":["C:/Users/mkeni/Documents/test2/reactPokemonApp/src/components/pokemon-form.tsx"],"names":["React","useState","formatType","useHistory","PokemonForm","pokemon","history","pokemonInfo","name","value","isValid","hp","cp","types","form","setForm","hasType","type","includes","handleInputChange","e","fieldName","target","fieldValue","newField","selectType","checked","newTypes","concat","filter","currentTypes","handleSubmit","preventDefault","console","log","push","id","picture","width","margin","map","marginBottom","toString"],"mappings":"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","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport Pokemon from '../models/pokemon';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';\r\ntype Props = {\r\n  pokemon: Pokemon\r\n};\r\n\r\ntype Field = {\r\n    value?:any,\r\n    error?: string,\r\n    isValid?:boolean\r\n};\r\n  \r\ntype Form = {\r\n    name: Field,\r\n    hp: Field,\r\n    cp: Field,\r\n    types: Field\r\n}\r\n\r\n// ToDo : comprendre comment l'objet pokemon est récupéré entierement ? -> recuperer dans pokemon-edit avec useState\r\nconst PokemonForm: FunctionComponent<Props> = ({pokemon}) => {\r\n    const history:any = useHistory();\r\n\r\n    let pokemonInfo = {\r\n        name: { value: pokemon.name, isValid: true},\r\n        hp: { value: pokemon.hp, isValid: true},\r\n        cp: { value: pokemon.cp, isValid: true},\r\n        types: { value: pokemon.types, isValid: true},\r\n    };\r\n    // get pokemonInfo with useState type form FROM pokemon-detail \r\n    const [form, setForm] = useState<Form>(pokemonInfo);\r\n\r\n    const types: string[] = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n    ];\r\n\r\n    const hasType = (type: string): boolean => {\r\n        return form.types.value.includes(type);\r\n    };\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>):void => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue} };\r\n    \r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n    const selectType = (type: string, e: React.ChangeEvent<HTMLInputElement>): void => {\r\n\r\n        const checked:boolean = e.target.checked;\r\n        let newField: Field;\r\n        let newTypes: string[] = [];\r\n        if(checked) {\r\n            // Si l'utilisateur coche un nouveau type, on l'ajoute à la liste des types du pokemon \r\n            newTypes = form.types.value.concat([type]);\r\n        } else {\r\n            // Si l'utilisateur decoche un type, on le retire decla liste des types du pokemon. \r\n            newTypes = form.types.value.filter((currentTypes: string) => currentTypes !== type);\r\n        }\r\n        newField = {value: newTypes };\r\n        // Comprendre\r\n        setForm({...form,...{types: newField} });\r\n    }\r\n    \r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n        history.push(`/pokemons/${pokemon.id}`);\r\n    }\r\n\r\n    return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n            <div className=\"card hoverable\"> \r\n            <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n            </div>\r\n            <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\">Nom</label>\r\n                    <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" placeholder={'Nom du pokémon'} value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"hp\">Point de vie</label>\r\n                    <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" min=\"0\" max=\"999\" value={form.hp.value} onChange={e => handleInputChange(e)} />\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"cp\">Dégâts</label>\r\n                    <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" min=\"0\" max=\"999\" value={form.cp.value} onChange={e => handleInputChange(e)} />\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                    <label>Types</label>\r\n                    {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                        <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" value={form.types.value.toString()} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                            <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                        </label>\r\n                    </div>\r\n                    ))}\r\n                </div>\r\n                </div>\r\n                <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </form>\r\n  );\r\n};\r\n   \r\nexport default PokemonForm;"]},"metadata":{},"sourceType":"module"}