{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkeni\\\\OneDrive\\\\Bureau\\\\reactPokemonApp\\\\src\\\\App.tsx\";\nimport React, { useState } from 'react';\nimport POKEMONS from './models/mock-pokemon'; // J'ajoute ça peut être -> import POKEMONS from './models/mock-pokemons';\n\nconst App = () => {\n  const [name, setName] = useState('React');\n  const [pokemons, setPokemons] = useState(POKEMONS);\n  let result = null;\n\n  for (let i = 0; i < pokemons.length; i++) {\n    /*#__PURE__*/\n    React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, \"Bonjour, \", pokemons[i].name);\n  }\n\n  return result;\n};\n\nexport default App; // * Déclarer une variable d'etat \"pokemons\" \n// * Initaliser cette etat avec la liste\n//  contenue dans la constante POKEMONS.\n// * Typer l'etat \"pokemons\" afin qu'il soit \n// un tableau de pokemon.\n\n/*\r\nexport const App: React.FC = () => {\r\n const name: String = 'React';\r\n    \r\n return (\r\n  <h1>Bonjour, {name} !</h1>\r\n )\r\n}*/\n\n/*  \r\nimport React from 'react';\r\n\r\nexport default class App extends React.Component {\r\n    const name: string = \"React\";\r\n\r\n    render(){\r\n        <h1>Bonjour, {name} !</h1>;\r\n    }\r\n} \r\n*/","map":{"version":3,"sources":["C:/Users/mkeni/OneDrive/Bureau/reactPokemonApp/src/App.tsx"],"names":["React","useState","POKEMONS","App","name","setName","pokemons","setPokemons","result","i","length"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AAEA,MAAMC,GAAsB,GAAG,MAAM;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBJ,QAAQ,CAAS,OAAT,CAAjC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAACC,QAAD,CAAxC;AACA,MAAIM,MAAU,GAAG,IAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcH,QAAQ,CAACG,CAAD,CAAR,CAAYL,IAA1B;AACH;;AACD,SACJI,MADI;AAGH,CAVD;;AAYA,eAAeL,GAAf,C,CACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { FunctionComponent, useState } from 'react';\r\nimport POKEMONS from './models/mock-pokemon';\r\n\r\n// J'ajoute ça peut être -> import POKEMONS from './models/mock-pokemons';\r\n\r\nconst App: FunctionComponent = () => {\r\n    const [name, setName]  = useState<String>('React');\r\n    const [pokemons, setPokemons] = useState(POKEMONS);\r\n    let result:any = null;\r\n    for (let i = 0; i < pokemons.length; i++) {\r\n        <h1>Bonjour, {pokemons[i].name}</h1>\r\n    }\r\n    return (\r\nresult\r\n    )\r\n}\r\n\r\nexport default App;\r\n// * Déclarer une variable d'etat \"pokemons\" \r\n// * Initaliser cette etat avec la liste\r\n//  contenue dans la constante POKEMONS.\r\n// * Typer l'etat \"pokemons\" afin qu'il soit \r\n// un tableau de pokemon.\r\n\r\n/*\r\nexport const App: React.FC = () => {\r\n const name: String = 'React';\r\n    \r\n return (\r\n  <h1>Bonjour, {name} !</h1>\r\n )\r\n}*/\r\n\r\n/*  \r\nimport React from 'react';\r\n\r\nexport default class App extends React.Component {\r\n    const name: string = \"React\";\r\n\r\n    render(){\r\n        <h1>Bonjour, {name} !</h1>;\r\n    }\r\n} \r\n*/"]},"metadata":{},"sourceType":"module"}