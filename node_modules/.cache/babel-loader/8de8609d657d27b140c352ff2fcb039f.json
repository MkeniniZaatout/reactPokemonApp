{"ast":null,"code":"export default class PokemonService {\n  static getPokemons() {\n    return fetch('http://localhost:3001/pokemons').then(response => response.json());\n  }\n\n  static getPokemon(id) {\n    return fetch(`http://localhost:3001/pokemons/${id}`).then(res => res.json()).then(data => this.isEmpty(data) ? null : data).catch(error => this.handleError(error));\n  }\n\n  static updatePokemon(pokemon) {\n    return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(pokemon),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).catch(error => this.handleError(error));\n  }\n\n  static deletePokemon(pokemonId) {}\n\n  static handleError(error) {\n    console.error(error);\n    throw new Error(error.toString());\n  }\n\n  static isEmpty(data) {\n    return Object.keys(data).length === 0;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/mkeni/Documents/test2/reactPokemonApp/src/services/pokemon-service.ts"],"names":["PokemonService","getPokemons","fetch","then","response","json","getPokemon","id","res","data","isEmpty","catch","error","handleError","updatePokemon","pokemon","method","body","JSON","stringify","headers","deletePokemon","pokemonId","console","Error","toString","Object","keys","length"],"mappings":"AAGA,eAAe,MAAMA,cAAN,CAAqB;AAEhC,SAAOC,WAAP,GAAyC;AACrC,WAAOC,KAAK,CAAC,gCAAD,CAAL,CACNC,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,CAAP;AAEH;;AAED,SAAOC,UAAP,CAAkBC,EAAlB,EAAqD;AACjD,WAAOL,KAAK,CAAE,kCAAiCK,EAAG,EAAtC,CAAL,CACFJ,IADE,CACGK,GAAG,IAAIA,GAAG,CAACH,IAAJ,EADV,EAEFF,IAFE,CAEGM,IAAI,IAAI,KAAKC,OAAL,CAAaD,IAAb,IAAqB,IAArB,GAA4BA,IAFvC,EAGFE,KAHE,CAGIC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAHb,CAAP;AAIH;;AAED,SAAOE,aAAP,CAAqBC,OAArB,EAA8D;AAC1D,WAAOb,KAAK,CAAE,kCAAiCa,OAAO,CAACR,EAAG,EAA9C,EAAiD;AACzDS,MAAAA,MAAM,EAAE,KADiD;AAEzDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAFmD;AAGzDK,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAHgD,KAAjD,CAAL,CAIJjB,IAJI,CAICK,GAAG,IAAGA,GAAG,CAACH,IAAJ,EAJP,EAImBM,KAJnB,CAIyBC,KAAK,IAAI,KAAKC,WAAL,CAAiBD,KAAjB,CAJlC,CAAP;AAKH;;AAED,SAAOS,aAAP,CAAqBC,SAArB,EAAwC,CAEvC;;AAED,SAAOT,WAAP,CAAmBD,KAAnB,EAAuC;AACnCW,IAAAA,OAAO,CAACX,KAAR,CAAcA,KAAd;AACA,UAAM,IAAIY,KAAJ,CAAUZ,KAAK,CAACa,QAAN,EAAV,CAAN;AACH;;AAED,SAAOf,OAAP,CAAeD,IAAf,EAAsC;AAClC,WAAOiB,MAAM,CAACC,IAAP,CAAYlB,IAAZ,EAAkBmB,MAAlB,KAA6B,CAApC;AACH;;AAjC+B","sourcesContent":["import { isThisTypeNode } from 'typescript';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nexport default class PokemonService {\r\n    \r\n    static getPokemons(): Promise<Pokemon[]> {\r\n        return fetch('http://localhost:3001/pokemons')\r\n        .then(response => response.json());\r\n    }\r\n\r\n    static getPokemon(id: number): Promise<Pokemon|null> {\r\n        return fetch(`http://localhost:3001/pokemons/${id}`)\r\n            .then(res => res.json())\r\n            .then(data => this.isEmpty(data) ? null : data)\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    static updatePokemon(pokemon: Pokemon): Promise<Pokemon|null> {\r\n        return fetch(`http://localhost:3001/pokemons/${pokemon.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(pokemon),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }).then(res=> res.json()).catch(error => this.handleError(error));\r\n    }\r\n\r\n    static deletePokemon(pokemonId: Number) {\r\n        \r\n    }\r\n\r\n    static handleError(error: Error): void {\r\n        console.error(error);\r\n        throw new Error(error.toString());\r\n    }\r\n\r\n    static isEmpty(data: Object): boolean {\r\n        return Object.keys(data).length === 0;\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}