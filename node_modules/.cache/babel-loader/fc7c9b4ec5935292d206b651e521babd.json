{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mkeni\\\\OneDrive\\\\Bureau\\\\reactPokemonApp\\\\src\\\\App.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport POKEMONS from './models/mock-pokemon';\n\n// import { FruitsAPI, Fruit, currentUserd} from './quelque-part'\n// J'ajoute ça peut être -> import POKEMONS from './models/mock-pokemons';\nconst App = () => {\n  const [name, setName] = useState('React'); // * Déclarer une variable d'etat \"pokemons\" \n  // * Initaliser cette etat avec la liste\n  //  contenue dans la constante POKEMONS.\n  // * Typer l'etat \"pokemons\" afin qu'il soit \n  // un tableau de pokemon.\n\n  const [pokemons, setPokemons] = useState([]); // * Initialiser le state avec un tableau vide : []\n  // * Charger la liste POKEMONS à L'initalisation du composant\n  // * Veiller à ce que la liste des pokémons  ne soit pas chargé\n  // dans le state qu'une seule fois.\n\n  const [pokemonsHook] = useState();\n  useEffect(() => {\n    setPokemons(POKEMONS);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, \"Pok\\xE9dex\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \" Il y a \", pokemons.length, \" pok\\xE9mons dans le Pokedex !\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"Nom\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Date de cr\\xE9ation\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Aper\\xE7u\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, pokemons.map(({\n    name,\n    created,\n    picture\n  }) => ({\n    name,\n    created,\n    picture\n  })), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }))))) // <h1>Bonjour, {pokemons[0].name}</h1>\n  ;\n};\n\nexport default App;\n/*\r\nexport const App: React.FC = () => {\r\n const name: String = 'React';\r\n    \r\n return (\r\n  <h1>Bonjour, {name} !</h1>\r\n )\r\n}*/\n\n/*  \r\nimport React from 'react';\r\n\r\nexport default class App extends React.Component {\r\n    const name: string = \"React\";\r\n\r\n    render(){\r\n        <h1>Bonjour, {name} !</h1>;\r\n    }\r\n} \r\n*/","map":{"version":3,"sources":["C:/Users/mkeni/OneDrive/Bureau/reactPokemonApp/src/App.tsx"],"names":["React","useState","useEffect","POKEMONS","App","name","setName","pokemons","setPokemons","pokemonsHook","length","map","created","picture"],"mappings":";AAAA,OAAOA,KAAP,IAAmCC,QAAnC,EAA6CC,SAA7C,QAA8D,OAA9D;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA;AACA;AAGA,MAAMC,GAAsB,GAAG,MAAM;AACjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAmBL,QAAQ,CAAS,OAAT,CAAjC,CADiC,CAEjC;AACA;AACA;AACA;AACA;;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAY,EAAZ,CAAxC,CAPiC,CASjC;AACA;AACA;AACA;;AACA,QAAM,CAACQ,YAAD,IAAiBR,QAAQ,EAA/B;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,WAAW,CAACL,QAAD,CAAX;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYI,QAAQ,CAACG,MAArB,mCAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CADJ,CADJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEH,QAAQ,CAACI,GAAT,CAAa,CAAC;AAACN,IAAAA,IAAD;AAAOO,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAD,MAAgC;AAACR,IAAAA,IAAD;AAAOO,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,GAAhC,CAAb,CADF,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,CARJ,CAHJ,CADA,CAuBI;AAvBJ;AAyBH,CA3CD;;AA6CA,eAAeT,GAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport POKEMONS from './models/mock-pokemon';\r\nimport Pokemon from './models/pokemon';\r\n// import { FruitsAPI, Fruit, currentUserd} from './quelque-part'\r\n// J'ajoute ça peut être -> import POKEMONS from './models/mock-pokemons';\r\n\r\n\r\nconst App: FunctionComponent = () => {\r\n    const [name, setName]  = useState<String>('React');\r\n    // * Déclarer une variable d'etat \"pokemons\" \r\n    // * Initaliser cette etat avec la liste\r\n    //  contenue dans la constante POKEMONS.\r\n    // * Typer l'etat \"pokemons\" afin qu'il soit \r\n    // un tableau de pokemon.\r\n    const [pokemons, setPokemons] = useState<Pokemon[]>([]);\r\n    \r\n    // * Initialiser le state avec un tableau vide : []\r\n    // * Charger la liste POKEMONS à L'initalisation du composant\r\n    // * Veiller à ce que la liste des pokémons  ne soit pas chargé\r\n    // dans le state qu'une seule fois.\r\n    const [pokemonsHook] = useState<Pokemon[]>();\r\n    useEffect(() => {\r\n        setPokemons(POKEMONS)\r\n    }, []);\r\n\r\n    return (\r\n    <div>\r\n        <h1>Pokédex</h1>\r\n        <p> Il y a {pokemons.length} pokémons dans le Pokedex !</p>\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Nom</th>\r\n                    <th>Date de création</th>\r\n                    <th>Aperçu</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                { pokemons.map(({name, created, picture})  => ({name, created, picture}) \r\n                    )}\r\n                    <th>\r\n                    </th>\r\n                </tr>\r\n            </tbody>\r\n\r\n        </table>\r\n    </div>\r\n        // <h1>Bonjour, {pokemons[0].name}</h1>\r\n    )\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n/*\r\nexport const App: React.FC = () => {\r\n const name: String = 'React';\r\n    \r\n return (\r\n  <h1>Bonjour, {name} !</h1>\r\n )\r\n}*/\r\n\r\n/*  \r\nimport React from 'react';\r\n\r\nexport default class App extends React.Component {\r\n    const name: string = \"React\";\r\n\r\n    render(){\r\n        <h1>Bonjour, {name} !</h1>;\r\n    }\r\n} \r\n*/"]},"metadata":{},"sourceType":"module"}